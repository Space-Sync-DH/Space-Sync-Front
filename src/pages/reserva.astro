---
// src/pages/reservas.astro
import Navbar from '../components/Navbar_User.astro';
import Sidebar from '../components/Slidebar_User.astro';
import '../styles/global.css';
---

<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reserva de Espacios</title>
    <link rel="icon" href="/logo.png" type="image/x-icon" />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.4.1/flowbite.min.css" rel="stylesheet">
</head>
<body class="bg-gradient-to-r from-teal-500 via-emerald-500 to-blue-500 text-black font-sans">

  

    <div class="flex">
        <!-- Sidebar -->
        <Sidebar />

        <!-- Main Content -->
        <div class="flex-1 flex flex-col ml-64"> <!-- Agregar margen para el sidebar -->
            <!-- Navbar -->
            <Navbar />

            <div class="container mx-auto p-8 flex-1">
                <h2 class="text-xl font-semibold mb-4">¡Haz tu Reserva!</h2>
                
                <div class="relative max-w-sm mb-4">
                    <input type="date" id="datepicker" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" required />
                </div>
                
                <form id="reservation-form" class="space-y-4">
                    <div>
                        <label for="capacity" class="block text-gray-700">Capacidad</label>
                        <select id="capacity" required class="mt-1 p-2 border border-gray-300 rounded w-full">
                            <option value="" disabled selected>Selecciona la capacidad</option>
                            <option value="2">2 personas</option>
                            <option value="4">4 personas</option>
                            <option value="6">6 personas</option>
                            <option value="8">8 personas</option>
                        </select>
                    </div>
                    <button type="submit" class="bg-blue-600 text-white p-2 rounded">Buscar Espacios</button>
                </form>

                <div id="available-spaces" class="bg-white shadow-md rounded-lg p-6 mt-6">
                    <h2 class="text-xl font-semibold mb-4">Espacios Disponibles</h2>
                    <div id="date-display" class="mb-4 text-lg font-semibold hidden"></div>
                    <ul id="spaces-list" class="space-y-4">
                        <!-- Aquí se llenarán los espacios disponibles -->
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Flowbite Modal for Confirmation -->
    <div id="confirmation-modal" tabindex="-1" class="hidden overflow-y-auto fixed top-0 right-0 left-0 z-50 w-full h-full bg-black bg-opacity-50">
        <div class="flex items-center justify-center h-full">
            <div class="bg-white rounded-lg shadow-lg p-6">
                <h3 class="text-lg font-semibold mb-4">Confirmación de Reserva</h3>
                <p id="confirmation-message" class="mb-4">¿Estás seguro de que deseas reservar esta sala?</p>
                <div class="flex justify-end">
                    <button id="confirm-reservation" class="bg-green-600 text-white px-4 py-2 rounded mr-2">Confirmar</button>
                    <button id="cancel-reservation" class="bg-gray-300 text-gray-800 px-4 py-2 rounded">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let selectedButton: HTMLButtonElement | null = null; // Variable para almacenar la franja horaria seleccionada

        document.getElementById('reservation-form')?.addEventListener('submit', function(event) {
            event.preventDefault();
            const dateInput = document.getElementById('datepicker') as HTMLInputElement | null;
            const capacityInput = document.getElementById('capacity') as HTMLSelectElement | null;

            if (!dateInput || !capacityInput) return; // Verifica que ambos elementos existan

            const date = dateInput.value;
            const capacity = capacityInput.value;

            // Mostrar la fecha seleccionada
            const dateDisplay = document.getElementById('date-display') as HTMLElement | null;
            if (dateDisplay) {
                dateDisplay.textContent = `Fecha seleccionada: ${date}`;
                dateDisplay.classList.remove('hidden');
            }

            // Simulando la búsqueda de espacios disponibles con detalles
            const availableSpaces = [
                { name: "Sala de Reuniones A", capacity: 4, chairs: 4, table: true, tv: true, notebook: true, location: "Piso 1", description: "Sala ideal para reuniones corporativas." },
                { name: "Sala de Capacitación B", capacity: 6, chairs: 6, table: true, tv: false, notebook: true, location: "Piso 2", description: "Espacio para talleres y capacitaciones." },
                { name: "Espacio Creativo C", capacity: 2, chairs: 2, table: false, tv: false, notebook: false, location: "Piso 1", description: "Ideal para brainstorming." }
            ].filter(space => space.capacity <= Number(capacity)); // Convertir capacity a número

            const spacesList = document.getElementById('spaces-list') as HTMLElement | null;
            if (spacesList) {
                spacesList.innerHTML = '';

                if (availableSpaces.length > 0) {
                    availableSpaces.forEach(space => {
                        const listItem = document.createElement('li');
                        listItem.className = 'p-4 border border-gray-300 rounded';
                        listItem.innerHTML = `
                            <strong>${space.name}</strong> - Capacidad: ${space.capacity} personas<br>
                            Detalles: ${space.chairs} sillas, Mesa: ${space.table ? 'Sí' : 'No'}, TV: ${space.tv ? 'Sí' : 'No'}, Notebook: ${space.notebook ? 'Sí' : 'No'}<br>
                            Ubicación: ${space.location} <br>
                            Descripción: ${space.description} <br>
                            <div class="grid grid-cols-4 gap-4 mt-2">
                                <button class="bg-blue-500 text-white p-2 rounded reserve-button" data-space="${space.name}" data-time="8:00 - 9:30">8:00 - 9:30</button>
                                <button class="bg-blue-500 text-white p-2 rounded reserve-button" data-space="${space.name}" data-time="9:40 - 10:50">9:40 - 10:50</button>
                                <button class="bg-blue-500 text-white p-2 rounded reserve-button" data-space="${space.name}" data-time="11:00 - 12:10">11:00 - 12:10</button>
                                <button class="bg-blue-500 text-white p-2 rounded reserve-button" data-space="${space.name}" data-time="12:20 - 13:30">12:20 - 13:30</button>
                            </div>
                        `;
                        spacesList.appendChild(listItem);
                    });
                } else {
                    spacesList.innerHTML = '<li class="p-4 text-gray-500">No hay espacios disponibles.</li>';
                }

                // Agregar evento a los botones de reserva
                const reserveButtons = document.querySelectorAll('.reserve-button');
                reserveButtons.forEach(button => {
                    button.addEventListener('click', function() {
                        const spaceName = this.getAttribute('data-space');
                        const timeSlot = this.getAttribute('data-time');

                        // Marcar el botón seleccionado y deshabilitar otros
                        if (selectedButton) {
                            selectedButton.classList.remove('bg-red-500');
                            selectedButton.classList.add('bg-blue-500');
                        }

                        selectedButton = this as HTMLButtonElement;
                        selectedButton.classList.add('bg-red-500');
                        selectedButton.classList.remove('bg-blue-500');

                        const confirmationMessage = document.getElementById('confirmation-message') as HTMLElement | null;
                        if (confirmationMessage) {
                            confirmationMessage.textContent = `¿Estás seguro de que deseas reservar ${spaceName} para el horario ${timeSlot}?`;
                        }
                        document.getElementById('confirmation-modal')?.classList.remove('hidden');
                    });
                });
            }
        });

        // Confirmar reserva
        document.getElementById('confirm-reservation')?.addEventListener('click', function() {
            alert('Reserva confirmada con éxito.');
            if (selectedButton) {
                selectedButton.disabled = true; // Deshabilitar el botón reservado
                selectedButton.classList.remove('bg-red-500');
                selectedButton.classList.add('bg-gray-500'); // Cambiar el color a gris para indicar que está reservado
                selectedButton.textContent = 'Reservado'; // Cambiar texto
            }
            document.getElementById('confirmation-modal')?.classList.add('hidden');
        });

        // Cancelar reserva
        document.getElementById('cancel-reservation')?.addEventListener('click', function() {
            document.getElementById('confirmation-modal')?.classList.add('hidden');
            if (selectedButton) {
                selectedButton.classList.remove('bg-red-500');
                selectedButton.classList.add('bg-blue-500'); // Volver a su color original
            }
        });
    </script>
</body>
</html>
